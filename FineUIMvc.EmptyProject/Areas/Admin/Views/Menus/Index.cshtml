@{
    ViewBag.Title = "Admin/Menus";
    var F = @Html.F();
}


@section body {

    @(F.Grid()
        .EnableCollapse(true)
        .Title("表格")
        .ShowHeader(false)
        .ShowBorder(true)
        .ID("Grid1")
        .DataIDField("ID")
        .DataTextField("Name")
        .EnableCheckBoxSelect(true)
        .EnableMultiSelect(true)
        .EnableTree(true)
        .TreeColumn("Name")
        .DataParentIDField("ParentID")
        .ExpandAllTreeNodes(true)
        .Toolbars(
           F.Toolbar()
               .Items(
                   F.Button()
                       .ID("btnDeleteSelected")
                       .Icon(Icon.Delete)
                       .Text("删除选中记录")
                       .Enabled(ViewBag.CoreMenuDelete)
                       .Listener("click", "onDeleteSelectedClick"),
                   F.ToolbarFill(),
                   F.Button()
                       .ID("btnCreate")
                       .Icon(Icon.Add)
                       .Text("新增菜单")
                       .Enabled(ViewBag.CoreMenuNew)
                       .Listener("click", "onCreateClick")
               )
        )
        .Columns(
            F.RowNumberField()
            .EnableTreeNumber(true),
            F.RenderField()
                        .HeaderText("菜单标题")
                                .ColumnID("Name")
                        .DataField("Name")
                                                .ExpandUnusedSpace(true)
                .Width(150),
            F.RenderField()
                        .HeaderText("链接")
                        .DataField("NavigateUrl")
                .Width(400),
            F.RenderField()
                        .HeaderText("浏览权限")
                        .DataField("PowerName")
                .Width(150),
                    F.RenderField()
                        .HeaderText("备注")
                        .DataField("Remark")
                .Width(100),
            F.RenderField()
                        .HeaderText("排序")
                        .DataField("SortIndex"),
            F.RenderField()
                        .HeaderText("")
                        .Width(60)
                        .RendererFunction("renderEditField")
                        .TextAlign(TextAlign.Center)
                        .EnableHeaderMenu(false),
            F.RenderField()
                        .HeaderText("")
                        .Width(60)
                        .RendererFunction("renderDeleteField")
                        .TextAlign(TextAlign.Center)
                        .EnableHeaderMenu(false)
        )
                .DataSource(ViewBag.MajorList)
    )

    @(F.Window()
        .ID("Window1")
        .Width(600)
        .Height(500)
        .IsModal(true)
        .Hidden(true)
        .Target(Target.Top)
        .EnableResize(true)
        .EnableMaximize(true)
        .EnableIFrame(true)
        .IFrameUrl(Url.Content("about:blank"))
        .OnClose(Url.Action("Window1_Close"), "Grid1")
    )

}

@section script {

    <script src="~/res/js/grid.js"></script>

    <script>
    var CoreMenuEdit = @Convert.ToString(ViewBag.CoreMenuEdit).ToLower();
    var CoreMenuDelete = @Convert.ToString(ViewBag.CoreMenuDelete).ToLower();

    function renderDeleteField(value, params) {
        var disabledCls = CoreMenuDelete ? '' : ' ui-state-disabled';
        return '<a href="javascript:;" class="action-btn delete' + disabledCls + '" ><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/delete.png")"></a>';
    }

    function renderEditField(value, params) {
        var disabledCls = CoreMenuEdit ? '' : ' ui-state-disabled';
        return '<a href="javascript:;" class="action-btn edit' + disabledCls + '"><img class="f-grid-cell-icon" src="@Url.Content("~/res/icon/pencil.png")"></a>';
    }

    function onCreateClick(event) {
        F.ui.Window1.show('@Url.Content("~/Admin/Menu_new")', '新增菜单');
    }



    function deleteSelectedRows(selectedRows) {
        // 触发后台事件
        F.doPostBack('@Url.Action("Grid1_Delete")', {
            'selectedRows': selectedRows,
            'Grid1_fields': F.ui.Grid1.fields
        });
    }

    function onDeleteSelectedClick(event) {
        var grid1 = F.ui.Grid1;

        if (!grid1.hasSelection()) {
            F.alert('请至少选择一项！');
            return;
        }

        var selectedRows = grid1.getSelectedRows();
        F.confirm({
            message: '你确定要删除选中的&nbsp;<b>' + selectedRows.length + '</b>&nbsp;行数据吗？',
            target: '_top',
            ok: function () {
                deleteSelectedRows(selectedRows);
            }
        });
    }

    F.ready(function () {

        var grid1 = F.ui.Grid1;
        grid1.el.on('click', 'a.action-btn', function (event) {
            var cnode = $(this);
            var rowData = grid1.getRowData(cnode.closest('.f-grid-row'));

            // 是否禁用
            if (cnode.hasClass('ui-state-disabled')) {
                return;
            }
            if (cnode.hasClass('delete')) {
                F.confirm({
                    message: '确定删除此记录？',
                    target: '_top',
                    ok: function () {
                        deleteSelectedRows([rowData.id]);
                    }
                });
            }
            else if (cnode.hasClass('edit')) {
                F.ui.Window1.show('@Url.Content("~/Admin/Menu_edit/")?menuId=' + rowData.id, '编辑菜单');
            }
        });
    });


    </script>
}