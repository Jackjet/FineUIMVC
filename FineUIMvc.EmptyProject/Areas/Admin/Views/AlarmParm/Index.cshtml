@{
    ViewBag.Title = "报警参数设置";
    var F = @Html.F();
}


@section body {

    @(
 F.Panel()
         .ID("Panel1")
         .ShowBorder(false)
         .ShowHeader(false)
         .Layout(LayoutType.VBox)
         .BoxConfigAlign(BoxLayoutAlign.Stretch)
         .IsViewPort(true)
         .Toolbars(
             F.Toolbar()
              .ID("Toolbar1")
                  .Items(
                        F.DropDownList()
                            .ID("ttbSearchType")
                            .SelectedValue("1")
                            .Listener("change", "onttbSearchTypeChange")
                            .Items(
                               F.ListItem()
                                .Text("泵站")
                                .Value("1"),
                               F.ListItem()
                                .Text("阀门")
                                .Value("2"),
                               F.ListItem()
                                .Text("流量")
                                .Value("3"),
                               F.ListItem()
                                .Text("水厂")
                                .Value("4"),
                               F.ListItem()
                                .Text("水源")
                                .Value("5"),
                               F.ListItem()
                                .Text("大表")
                                .Value("6"),
                               F.ListItem()
                                .Text("压力")
                                .Value("7"),
                               F.ListItem()
                                .Text("调峰")
                                .Value("8"),
                               F.ListItem()
                                .Text("水质")
                                .Value("9"),
                               F.ListItem()
                               .Text("加压站")
                               .Value("10"),
                                   F.ListItem()
                               .Text("预置泵站")
                               .Value("11")
                         ),
                         F.TwinTriggerBox()
                                .ID("ttbSearchMessage")
                                .ShowLabel(false)
                                .EmptyText("在报警信息FMsg中搜索")
                                .Trigger1Icon(TriggerIcon.Clear)
                                .Trigger2Icon(TriggerIcon.Search)
                                .ShowTrigger1(false)
                                .Listener("trigger1click", "onTrigger1Click")
                                .Listener("trigger2click", "onTrigger2Click"),
                         F.ToolbarFill(),
                         F.Button()
                                .ID("btnDeleteSelected")
                                .Icon(Icon.Delete)
                                .Text("删除子项")
                                .Listener("click", "onDeleteSelectedClick"),
                         F.Button()
                          .ID("btnNew")
                          .Icon(Icon.Add)
                          .Listener("click", "onNewClick")
                          .Text("新增"),
                         F.Button()
                          .ID("btnSubmit")
                          .Text("保存数据")
                          .Listener("click", "onSubmitClick")
                  )
         )
         .Items(
                  F.Grid()
                       .EnableCollapse(true)
                       .Title("表格")
                       .ShowHeader(false)
                       .ShowBorder(true)
                       .ID("Grid1")
                       .DataIDField("id")
                       .EnableTextSelection(true)
                       .EnableCheckBoxSelect(true)
                       .AllowCellEditing(true)
                       .ClicksToEdit(1)
                       //.OnAfterEdit(Url.Action("Grid1_AfterEdit"), "Grid1"
                       //                   , new Parameter("gridPageSize", "F.ui.ddlGridPageSize.getValue()")
                       //                   , new Parameter("searchType", "F.ui.ttbSearchType.getValue()")
                       //                   , new Parameter("searchMessage", "F.ui.ttbSearchMessage.getValue()"))
                       .AllowPaging(true)
                       .IsDatabasePaging(true)
                       .AutoScroll(true)
                       .BoxFlex(1)
                        .OnPageIndexChanged(Url.Action("Grid1_PageIndexChanged"), "Grid1"
                                        , new Parameter("gridPageSize", "F.ui.ddlGridPageSize.getValue()")
                                        , new Parameter("searchType", "F.ui.ttbSearchType.getValue()")
                                        , new Parameter("searchMessage", "F.ui.ttbSearchMessage.getValue()"))
                       .PageSize(1000)
                       .PageItems(
                           F.ToolbarSeparator()
                              .ID("ToolbarSeparator1"),
                           F.ToolbarText()
                              .ID("ToolbarText1")
                              .Text("每页记录数："),
                           F.DropDownList()
                              .ID("ddlGridPageSize")
                              .Width(80)
                              .Listener("change", "onDropDownList1Change")
                              .SelectedValue("1000")
                              .Items(
                                 F.ListItem()
                                   .Text("1000")
                                   .Value("1000"),
                                 F.ListItem()
                                   .Text("2000")
                                   .Value("2000"),
                                 F.ListItem()
                                   .Text("5000")
                                   .Value("5000"),
                                 F.ListItem()
                                   .Text("10000")
                                   .Value("10000")
                              )
                       )
                       .Columns(
            F.RowNumberField(),
            F.RenderField()
                .HeaderText("类型FMarkerType")
                .DataField("FMarkerType")
                .ColumnID("FMarkerType")
                .RendererFunction("renderFMarkerType")
                .Width(180)
                .Editor(
                  F.DropDownList()
                     .ID("ddlFMarkerType")
                     .Required(true)
                     .Items(
                        F.ListItem()
                         .Text("泵站")
                         .Value("1"),
                        F.ListItem()
                         .Text("阀门")
                         .Value("2"),
                        F.ListItem()
                         .Text("流量")
                         .Value("3"),
                        F.ListItem()
                         .Text("水厂")
                         .Value("4"),
                        F.ListItem()
                         .Text("水源")
                         .Value("5"),
                        F.ListItem()
                         .Text("大表")
                         .Value("6"),
                        F.ListItem()
                         .Text("压力")
                         .Value("7"),
                        F.ListItem()
                         .Text("调峰")
                         .Value("8"),
                        F.ListItem()
                         .Text("水质")
                         .Value("9")
                   )
                ),
            F.RenderField()
                .HeaderText("关键字FKey")
                .DataField("FKey")
                .ColumnID("FKey")
                .Width(100)
                .Editor(
                    F.TextBox()
                         .ID("tbxFKey")
                         .Required(true)
                        ),
           F.RenderField()
              .HeaderText("报警信息FMsg")
              .DataField("FMsg")
              .Width(300)
              .ColumnID("FMsg")
              .Editor(
                F.TextBox()
                     .ID("tbxFMsg")
                     .Required(true)
                    ),
            F.RenderField()
              .HeaderText("等级FLev")
              .DataField("FLev")
              .ColumnID("FLev")
              .RendererFunction("renderFLev")
              .Width(80)
              .Editor(
                  F.DropDownList()
                     .ID("ddlFLev")
                     .Required(true)
                     .Items(
                         F.ListItem()
                             .Text("低")
                             .Value("1"),
                         F.ListItem()
                             .Text("中")
                             .Value("2"),
                         F.ListItem()
                             .Text("高")
                             .Value("3")
                   )
              ),
             F.RenderCheckField()
                 .Width(100)
                 .ColumnID("FIsDef")
                 .DataField("FIsDef")
                 .HeaderText("是否默认")
           )
           .RecordCount(ViewBag.Grid1RecordCount)
           .DataSource(ViewBag.Grid1DataSource)
       )

    )



}


@section script {

    <script src="~/res/js/grid.js"></script>
    <script>
        function doCustomPostBack(type, params) {
            var grid1 = F.ui.Grid1;
            var ddlGridPageSize = F.ui.ddlGridPageSize;
            // 触发后台事件
            F.doPostBack('@Url.Action("MyCustomPostBack")', {
                type: type,
                gridFields: grid1.fields,
                typeParams: params,
                gridIndex: grid1.getPageIndex(),
                gridPageSize: ddlGridPageSize.getValue()
            });
        }
        function renderAction1(value, params) {
            var deleteImageUrl = '@Url.Content("~/res/icon/delete.png")';
            return '<a class="action-btn mybtn2" href="javascript:;"><img class="f-grid-cell-icon" src="' + deleteImageUrl + '"></a>';
        }

        function onTrigger1Click(event) {
            doCustomPostBack('trigger1');
        }

        function onTrigger2Click(event) {
            var triggerValue = this.getValue();
            if (!triggerValue) {
                F.alert('请输入搜索关键词！');
                return;
            }

            doCustomPostBack('trigger2', {
                triggerValue: triggerValue
            });
        }
        function onttbSearchTypeChange(event) {
            doCustomPostBack('searchType', {
                searchType: this.getValue()
            });
        }
        function onDropDownList1Change(event) {
            doCustomPostBack('dropdownlist', {
                ddlValue: this.getValue()

            });
        }
        function renderFLev(value) {
            return F.ui.ddlFLev.getTextByValue(value);
        }
        function renderFMarkerType(value) {
            return F.ui.ddlFMarkerType.getTextByValue(value);
        }

        function onDeleteSelectedClick(event) {
            var grid1 = F.ui.Grid1;

            if (!grid1.hasSelection()) {
                F.alert('请至少选择一项！');
                return;
            }

            var selectedRows = grid1.getSelectedRows();
            F.confirm({
                message: '你确定要删除选中的&nbsp;<b>' + selectedRows.length + '</b>&nbsp;行数据吗？',
                target: '_top',
                ok: function () {
                    grid1.deleteRows(selectedRows);
                }
            });
        }

        function onNewClick() {
            var grid1 = F.ui.Grid1;

            var addedRowId = grid1.addNewRecord({
                'FMarkerType': '1',
                'FKey': '',
                'FMsg': '',
                'FLev':'1'
            }, true);
        }

        function isValid() {
            var grid1 = F.ui.Grid1;
            var valid = true, modifiedData = grid1.getModifiedData();

            $.each(modifiedData, function (index, rowData) {

                if (rowData.status === 'deleted') {
                    return true; // continue
                }

                var name1 = rowData.values['FKey'];
                // 更改了姓名列，并且为空字符串
                if (typeof (name1) != 'undefined' && $.trim(name1) == '') {
                    F.alert({
                        message: '关键字FKey不能为空！',
                        ok: function () {
                            grid1.startEdit(rowData.id, 'FKey');
                        }
                    });

                    valid = false;

                    return false; // break
                }
                var name2 = rowData.values['FMsg'];
                // 更改了姓名列，并且为空字符串
                if (typeof (name2) != 'undefined' && $.trim(name2) == '') {
                    F.alert({
                        message: '报警信息FMsg不能为空！',
                        ok: function () {
                            grid1.startEdit(rowData.id, 'FMsg');
                        }
                    });

                    valid = false;

                    return false; // break
                }
            });


            return valid;
        }

        function onSubmitClick(event) {
            var grid1 = F.ui.Grid1;

            // 自定义验证是否通过
            if (!isValid()) {
                return;
            }

            // 触发后台事件
            F.doPostBack('@Url.Action("btnSubmit_Click")', {
                Grid1_fields: grid1.fields,
                Grid1_modifiedData: grid1.getModifiedData(),
                Grid1_pageIndex: grid1.getPageIndex(),
                gridPageSize:F.ui.ddlGridPageSize.getValue(),
                searchType:F.ui.ttbSearchType.getValue(),
                searchMessage: F.ui.ttbSearchMessage.getValue()
            });
        }

        F.beforeUnload(function () {
            var grid1 = F.ui.Grid1;
            // 如果存在删除行 或者 新增行 或者 修改的数据
            if (grid1.getModifiedData().length) {
                return '当前表格数据已经被修改，确认放弃修改？';
            }
        });
    </script>

}