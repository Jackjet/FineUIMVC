@model FineUIMvc.PumpMVC.Models.BASE_FAMEN
@{
    ViewBag.Title = "FamenBasic_edit";
    var F = @Html.F();
}
@section body {
    @(F.SimpleForm()
         .ID("SimpleForm1")
         .ShowBorder(false)
         .ShowHeader(false)
         .BodyPadding(10)
         .AutoScroll(true)
         .IsViewPort(true)
         .Toolbars(
             F.Toolbar()
                 .Items(
                     F.Button()
                         .ValidateForms("SimpleForm1")
                         .Icon(Icon.SystemSaveClose)
                         .OnClick(Url.Action("btnBasicEdit_Click"), "SimpleForm1")
                         .Text("保存")
                 )
         )
         .Items(
                 F.TextBoxFor(x=>x.FDTUCode)
                    .Label("编号")
                    .EmptyText("请输入编号")
                    .ID("tbxFDTUCode")
                    .LabelWidth(80)
                    .Required(true)
                    .ShowRedStar(true),
                F.TextBoxFor(x=>x.FName)
                    .Label("名称")
                    .EmptyText("请输入名称")
                    .ID("tbxFName")
                    .LabelWidth(80)
                    .Required(true)
                    .ShowRedStar(true),
                F.TriggerBoxFor(x => x.Panda_Customer.Name)
                    .ID("tbSelectedCustomer")
                    .EnableEdit(false)
                    .LabelWidth(80)
                    .TriggerIcon(TriggerIcon.Search)
                    .OnClientTriggerClick("OnClientCustomerSelect();")
                    .Required(true)
                    .ShowRedStar(true)
                    .Readonly(ViewBag.ReadOnly)
                    .Label("客户名称"),
                F.TextBoxFor(x=>x.FBrand)
                    .Label("品牌")
                    .EmptyText("请输入品牌")
                    .ID("tbxFBrand")
                    .LabelWidth(80)
                    .Required(true)
                    .ShowRedStar(true),
                F.TriggerBoxFor(x=>x.FMapAddress)
                     .ID("tbSelectedAddress")
                     .LabelWidth(80)
                     .EnableEdit(false)
                     .TriggerIcon(TriggerIcon.Search)
                     .OnClientTriggerClick("OnClientAddressSelect();")
                     .Label("安装地址"),
               F.TriggerBoxFor(x => x.AddressScheme.FName)
                            .ID("tbSelectedAddressList")
                            .EnableEdit(false)
                            .Required(true)
                            .LabelWidth(80)
                            .ShowRedStar(true)
                            .TriggerIcon(TriggerIcon.Search)
                            .OnClientTriggerClick("OnClientAddressListSelect();")
                            .Label("地址方案"),
                 F.DropDownListFor(x=>x.FMaterial)
                          .ID("ddlFMaterial")
                          .Label("材质")
                          .LabelWidth(80)
                          .DataTextField("FName")
                          .DataValueField("FValue")
                          .DataSource(ViewBag.ddlCZDataSource),
                         F.DropDownListFor(x => x.FDeviceType)
                          .ID("ddlFDeviceType")
                          .Label("设备类型")
                          .LabelWidth(80)
                          .DataTextField("FName")
                          .DataValueField("FValue")
                          .DataSource(ViewBag.ddlSBLXDataSource),
                         F.DropDownListFor(x => x.FOperationMode)
                          .ID("ddlFOperationMode")
                          .Label("操作方式")
                          .LabelWidth(80)
                          .DataTextField("FName")
                          .DataValueField("FValue")
                          .DataSource(ViewBag.ddlCZFSDataSource),
                         F.DropDownListFor(x => x.FCommunicationMode)
                          .ID("ddlFCommunicationMode")
                          .Label("通讯方式")
                          .LabelWidth(80)
                          .DataTextField("FName")
                          .DataValueField("FValue")
                          .DataSource(ViewBag.ddlTXFSDataSource),
                         F.DropDownListFor(x => x.FCaliber)
                          .ID("ddlFCaliber")
                          .Label("口径")
                          .LabelWidth(80)
                          .DataTextField("FName")
                          .DataValueField("FValue")
                          .DataSource(ViewBag.ddlKJDataSource),
                         F.DropDownListFor(x => x.FValveFunction)
                          .ID("ddlFValveFunction")
                          .Label("阀门功能")
                          .LabelWidth(80)
                          .DataTextField("FName")
                          .DataValueField("FValue")
                          .DataSource(ViewBag.ddlFSGNDataSource),
                          F.DropDownListFor(x => x.FDrainageMethod)
                           .ID("ddlFDrainageMethod")
                           .Label("排水方式")
                           .LabelWidth(80)
                           .DataTextField("FName")
                           .DataValueField("FValue")
                           .DataSource(ViewBag.ddlPSFSDataSource),
                          F.DropDownListFor(x => x.FValveSteering)
                           .ID("ddlFValveSteering")
                           .Label("阀门转向")
                           .LabelWidth(80)
                           .DataTextField("FName")
                           .DataValueField("FValue")
                           .DataSource(ViewBag.ddlFMZXDataSource),
                         F.DropDownListFor(x => x.FBuriedForm)
                           .ID("ddlFBuriedForm")
                           .Label("埋设形式")
                           .LabelWidth(80)
                           .DataTextField("FName")
                           .DataValueField("FValue")
                           .DataSource(ViewBag.ddlSMXSDataSource),
                          F.DropDownListFor(x => x.FEquipmentState)
                           .ID("ddlFEquipmentState")
                           .Label("设备状态")
                           .LabelWidth(80)
                           .DataTextField("FName")
                           .DataValueField("FValue")
                           .DataSource(ViewBag.ddlSBZTDataSource),
                 F.NumberBoxFor(x=>x.FGroundElevation)
                        .Label("地面标高")
                        .LabelWidth(80)
                        .Text("1")
                        .ID("tbxFGroundElevation"),
                F.NumberBoxFor(x=>x.FBYCycle)
                   .Label("保养周期")
                   .LabelWidth(80)
                   .Text("1")
                   .ID("tbxFBYCycle"),
                F.NumberBoxFor(x=>x.FGHCycle)
                   .Label("更换周期")
                   .LabelWidth(80)
                   .Text("1")
                   .ID("tbxFGHCycle"),
                 F.TextBoxFor(x=>x.FWellRoom)
                     .Label("所在井室")
                     .LabelWidth(80)
                     .ID("tbxFWellRoom"),
                 F.TextBoxFor(x=>x.FLocationPipeline)
                     .Label("所在管线")
                     .LabelWidth(80)
                     .ID("tbxFLocationPipeline"),
                             F.HiddenFieldFor(x => x.AddressScheme.ID)
                         .ID("tbxFSchemeID"),
                     F.HiddenFieldFor(x => x.id)
                         .ID("tbxID"),
                      F.HiddenFieldFor(x => x.FLngLat)
                         .Label("经纬度")
                         .ID("tbxLngLat"),
                      F.HiddenFieldFor(x => x.Panda_Customer.ID)
                         .Label("客户id")
                         .ID("tbxCustomerID"),
                      F.HiddenFieldFor(x => x.FDTUCode)
                         .ID("tbOldDTU"),
                      F.HiddenFieldFor(x => x.FMarkerID)
                         .ID("tbxFMarkerID"),
                      F.HiddenFieldFor(x => x.Panda_Customer.FMapTempID)
                         .Label("地图模板id")
                         .ID("tbxFMapTempID")

        )
    )

    @(F.Window()
        .ID("Window1")
        .Width(700)
        .Height(500)
        .IsModal(true)
        .Hidden(true)
        .Target(Target.Top)
        .EnableResize(true)
        .EnableMaximize(true)
        .EnableIFrame(true)
        .IFrameUrl(Url.Content("about:blank"))
    )
}

@section script {
    <script>

        function OnClientCustomerSelect(event) {
            var url = '@Url.Content("~/OpenWindow/CustomerWindow")';
            var openUrl = F.formatString("{0}?customerId={1}", url, F.urlEncode(F.ui.tbxCustomerID.getValue()));

            F.ui.Window1.show(openUrl, '客户选择');
        }

        function OnClientAddressSelect(event) {
            var url = '@Url.Content("~/OpenWindow/MapWindow")';
            var openUrl = F.formatString("{0}?LngLat={1}", url, F.urlEncode(F.ui.tbxLngLat.getValue()));

            F.ui.Window1.show(openUrl, '坐标地址选择');
        }

        function OnClientAddressListSelect(event) {
            var url = '@Url.Content("~/OpenWindow/AddressSchemeWindow")';
            var openUrl = F.formatString("{0}?id=2&AddressListId={1}", url, F.urlEncode(F.ui.tbSelectedAddressList.getValue()));

            F.ui.Window1.show(openUrl, '地址方案选择', 700, 500);
        }

        function updateAddressScheme(id, text) {
            F.ui.tbSelectedAddressList.setValue(text);
            F.ui.tbxFSchemeID.setValue(id);
        }

        function updateCustomer(id, text, tepmid) {
            F.ui.tbSelectedCustomer.setValue(text);
            F.ui.tbxCustomerID.setValue(id);
            F.ui.tbxFMapTempID.setValue(tepmid);
        }

        function updateMap(id, text) {
            F.ui.tbSelectedAddress.setValue(text);
            F.ui.tbxLngLat.setValue(id);
        }

    </script>
}

